import java.util.*;
//It stores doubles in an  array
//

public class MacArray {

	private double[] arr;
	private double[] tempArr;
	private int size = 0;
	private int Capacity;
	
	
	//constructor with max size
	public MacArray(int s){
		Capacity = s;
		arr = new double[s];	
		
	}
	
	public int getSize() {
		return size;
	}
	
	public int getCapacity(){
		return this.Capacity;
	}
	
	public void push(int n){
		
		arr[size] = n;
		size++;
		tempArr = Arrays.copyOf(arr, getCapacity());
	
	} 
	
	
	public void insertAt(int pos, int x){
	
		
		for(int i=size-1; i>=pos; i-- ){
		
			arr[i+1] = arr[i];
		}
		
		arr[pos] = x;
		
	}
	
public void insertTop(int x){
	
		
		for(int i=size-1; i>=0; i-- ){
		
			arr[i+1] = arr[i];
		}
		
		arr[0] = x;
		
	}
	
	public void removeFrom(int pos){
		
		
		arr[pos] = 0;
		
		for(int i=pos; i<=size-1; i++ ){
		
			arr[i] = arr[i+1];
		}
		
		arr[size] = 0;
		
	}
	
public void removeTop(){
		
		
		//arr[0] = 0;
		
		for(int i=0; i<=size-1; i++ ){
		
			arr[i] = arr[i+1];
		}
		
		arr[size] = 0;
		
	}
	
	
	
	
	public void printArr(){
		
		System.out.print("\n[");
		for(int i=0; i<Capacity; i++){
			
			System.out.print( arr[i]+ ",  "  );
		}
		
		System.out.print("]");
	}
	
	public static void main(String[] args){
		
		MacArray myArr = new MacArray(10);
		
		myArr.push(4);
		myArr.push(1);
		myArr.push(3);
		myArr.push(5);
		myArr.printArr();
		myArr.insertAt(2,6);
		
		myArr.printArr();
		myArr.removeTop();
		myArr.printArr();
		
		
	}
}


